unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, VclTee.TeeGDIPlus, Vcl.StdCtrls,
  VclTee.TeEngine, VclTee.Series, Vcl.ExtCtrls, VclTee.TeeProcs, VclTee.Chart,
  VclTee.BubbleCh;

type
  TForm1 = class(TForm)
    Chart1: TChart;
    Chart2: TChart;
    Label1: TLabel;
    Edit1: TEdit;
    Button1: TButton;
    Series2: TBarSeries;
    Series1: TPointSeries;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
  a, b, x, y, n, i: Integer;
  c: array [0 .. 100] of Integer;
  s, m, m1: string;
  p: Real;
begin
  Randomize;

  Series1.Clear;
  Series2.Clear;

  n := StrToInt(Edit1.Text);

  Chart1.LeftAxis.SetMinMax(-n, n);
  Chart1.BottomAxis.SetMinMax(-n, n);

  for i := 0 to 100 do
  begin
    c[i] := 0;
  end;

  for a := 1 to 100 do
  begin
    x := 0;
    y := 0;

    for b := 1 to n do
    begin
      case Random(4) of
        0:  x := x + 1;
        1:  x := x - 1;
        2:  y := y + 1;
        3:  y := y - 1;
      end;

      Series1.AddXY(x, y, '', clBlue);

      if b = n then
      begin
        Series1.AddXY(x, y, '', clRed);
        Series1.AddXY(0, 0, '', clBlack);

        Application.ProcessMessages;

        for i := 1 to n do
        begin
          if Sqrt(x * x + y * y) <= i
            then c[i] := c[i] + 1;
        end;
        { s:='0';
          for i:=1 to n do
          begin
          if (Pos(IntToStr(x),s)<>0) and (Pos(IntToStr(y),s)<>0)
          then c[i]:=c[i]+1;
          m:=IntToStr(i-2*i);
          m1:=IntToStr(i);
          s:=m+s+m1;
          end; }
      end;
    end;
  end;

  for i := 1 to n do
  begin
    p := (c[i] - c[i - 1]) / (3.14 * (i * i - (i - 1) * (i - 1)));
    Series2.AddXY(i, p);
  end;
  { for i:=1 to n do
    begin
    brsrsSeries1.AddXY(i,c[i]-c[i-1]);
    end; }
end;

end.

{n := StrToInt(Edit1.Text);
  h := StrToInt(Edit2.Text);
  m := StrToInt(Edit3.Text);
  dr := StrToInt(Edit4.Text);
  Series3.Clear;
  Series2.Clear;
  Chart1.LeftAxis.SetMinMax(-n / 10 - 20, n / 10 + 20);
  Chart1.BottomAxis.SetMinMax(-n / 10 - 20, n / 10 + 20);
  Chart3.LeftAxis.SetMinMax(-n / 10 - 20, n / 10 + 20);
  Chart3.BottomAxis.SetMinMax(-n / 10 - 20, n / 10 + 20);
  randomize;
  for i := 1 to m do
  begin
    x := 0;
    y := 0;
    for j := 1 to n do
    begin
      case random(4) of
        0:
          x := x + h;
        1:
          x := x - h;
        2:
          y := y - h;
        3:
          y := y + h;
      end;
      Series1.Clear;
      Series1.AddBubble(x, y, 2);
      Application.ProcessMessages;
    end;
    Series3.AddBubble(x, y, 2, '', clred);
    r := Sqrt(Sqr(x) + Sqr(y));
    g := round(r / dr) + 1;
    p[g] := p[g] + 1;
  end;
  for i := 1 to 10 do
    Series2.AddBar(p[i] / m, IntToStr(i), clGreen);    }
